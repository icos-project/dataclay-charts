apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "dataclay-charts.name" . }}-backends
  labels:
    app: backends
    {{- include "dataclay-charts.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "dataclay-charts.name" . }}-backend
  replicas: {{ .Values.backends.replicaCount }}
  selector:
    matchLabels:
      app: backends
      {{- include "dataclay-charts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- toYaml (merge .Values.globalPodAnnotations .Values.backends.podAnnotations) | nindent 8 }}
      labels:
        app: backends
        {{- include "dataclay-charts.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      serviceAccountName: {{ include "dataclay-charts.serviceAccountName" . }}
      securityContext:
        {{- toYaml (merge .Values.globalPodSecurityContext .Values.backends.podSecurityContext) | nindent 8 }}
      {{- if .Values.model_bootstrap.enabled }}
      initContainers:
        {{- range .Values.model_bootstrap.sources }}
        - name: model-bootstrap-{{ .name }}
          image: "{{ .repository }}:{{ .tag }}"
          imagePullPolicy: "{{ .pullPolicy }}"
          command: ["cp", "-a", "{{ .base_path }}/{{ .model_folder }}", "/usr/src/{{ .model_folder }}"]
          volumeMounts:
            - name: model-dc-data
              mountPath: /usr/src
        {{- end }}
      {{- end }}
      containers:
        - name: backend-{{ .Chart.Name }}
          securityContext:
            {{- toYaml (merge .Values.globalSecurityContext .Values.backends.securityContext) | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["python", "-m", "dataclay.backend"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ .Values.backends.service.port }}
              protocol: TCP
          env:
            - name: DATACLAY_KV_HOST
              value: {{ include "dataclay-charts.name" . }}-redis
          {{- if or (.Values.persistence.enabled) (.Values.model_bootstrap.enabled) }}
          volumeMounts:
          {{- if .Values.model_bootstrap.enabled }}
            - name: model-dc-data
              mountPath: /usr/src
          {{- end }}
          {{- if .Values.persistence.enabled }}
            - name: backend-dc-data
              mountPath: /storage
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.backends.resources | nindent 12 }}
      nodeSelector:
        {{- toYaml (merge .Values.globalNodeSelector .Values.backends.nodeSelector) | nindent 8 }}
      affinity:
        {{- toYaml (merge .Values.globalAffinity .Values.backends.affinity) | nindent 8 }}
      tolerations: 
        {{- concat .Values.globalTolerations .Values.backends.tolerations | default (list) | uniq | toYaml | nindent 8 }}
      {{- if .Values.model_bootstrap.enabled }}
      volumes:
        - name: model-dc-data
          emptyDir: {}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: backend-dc-data
      spec:
        accessModes: [{{ .Values.persistence.accessMode }}]
        storageClassName: {{ .Values.persistence.storageClass | default "standard" }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
